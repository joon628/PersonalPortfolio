---
# Portfolio deployment playbook
- name: Deploy Portfolio Application
  hosts: portfolio_servers
  become: no
  gather_facts: yes
  
  vars:
    deployment_timestamp: "{{ ansible_date_time.epoch }}"
    backup_timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
    
  pre_tasks:
    - name: Check if deployment is already in progress
      stat:
        path: "{{ app_path }}/.deployment_lock"
      register: deployment_lock
      
    - name: Fail if deployment is already in progress
      fail:
        msg: "Deployment already in progress. Remove {{ app_path }}/.deployment_lock if this is incorrect."
      when: deployment_lock.stat.exists
      
    - name: Create deployment lock
      file:
        path: "{{ app_path }}/.deployment_lock"
        state: touch
        
    - name: Validate required variables
      assert:
        that:
          - app_domain is defined
          - app_path is defined
          - ssl_email is defined
        fail_msg: "Required variables are not defined"

  roles:
    - role: portfolio-deployment
      tags: ['portfolio', 'deployment']
      
  post_tasks:
    - name: Verify deployment
      uri:
        url: "https://{{ app_domain }}"
        method: GET
        timeout: 30
        status_code: 200
        validate_certs: no
      register: health_check
      retries: "{{ health_check_max_retries }}"
      delay: "{{ health_check_delay }}"
      ignore_errors: yes
      
    - name: Remove deployment lock
      file:
        path: "{{ app_path }}/.deployment_lock"
        state: absent
        
    - name: Deployment successful
      debug:
        msg: "Portfolio deployment completed successfully at {{ ansible_date_time.iso8601 }}"
      when: health_check.status == 200
        
    - name: Deployment warning
      debug:
        msg: "Portfolio deployment completed but health check failed. Check application logs."
      when: health_check.status != 200
        
  handlers: []